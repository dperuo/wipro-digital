{"version":3,"sources":["webpack:///bundle.min.js","webpack:///webpack/bootstrap 7a2997928a99f675367a","webpack:///./src/js/index.js","webpack:///./src/js/modules/weather-forcast/index.js","webpack:///./src/js/modules/weather-forcast/template.html","webpack:///./src/js/modules/weather-forcast/weatherService.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","ctrl","angular","controller","weatherForcast","weatherService","restrict","replace","scope","template","link","elem","attr","vm","console","log","get","array","factory","directive","$inject","$http"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GEpChC,QAAAW,MARAX,EAAA,GAEAY,QACAR,OAAA,OACA,mBAEAS,WAAA,OAAAF,IFqDM,SAASP,EAAQD,EAASH,GGjDhC,QAAAc,GAAAC,GACA,OACAC,SAAA,IACAC,SAAA,EACAC,SACAC,WACAC,KAAA,SAAAF,EAAAG,EAAAC,EAAAX,GACA,GAAAY,GAAAL,CAEAM,SAAAC,IAAAV,EAAAW,OAEAH,EAAAI,OAAA,eArBA,GAAAR,GAAAnB,EAAA,GACAe,EAAAf,EAAA,EAEAY,SACAR,OAAA,qBACAwB,QAAA,iBAAAb,GACAc,UAAA,iBAAAf,GAEAA,EAAAgB,SAAA,mBHkFM,SAAS1B,EAAQD,GI1FvBC,EAAAD,QAAA,0PJgGM,SAASC,EAAQD,GK9FvB,QAAAY,GAAAgB,GACA,OACAL,IAAA,WACA,yCALAX,EAAAe,SAAA,SAUA1B,EAAAD,QAAAY","file":"bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t\n\tangular\n\t  .module('app', [\n\t    'weatherForcast'\n\t  ])\n\t  .controller('ctrl', ctrl);\n\t\n\tfunction ctrl() {};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar template = __webpack_require__(2);\n\tvar weatherService = __webpack_require__(3);\n\t\n\tangular\n\t  .module('weatherForcast', [])\n\t  .factory('weatherService', weatherService)\n\t  .directive('weatherForcast', weatherForcast);\n\t\n\tweatherForcast.$inject = ['weatherService'];\n\t\n\tfunction weatherForcast(weatherService) {\n\t  return {\n\t    restrict: 'E',\n\t    replace: false,\n\t    scope: {},\n\t    template: template,\n\t    link: function(scope, elem, attr, ctrl) {\n\t      var vm = scope;\n\t\n\t      console.log(weatherService.get())\n\t\n\t      vm.array = [1, 2, 3, 0, 4, 5];\n\t    }\n\t  }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=weather-forcast> <div class=row> <div class=col-md-4> <h1>Local Weather Forcast</h1> </div> </div> <div class=row> <div class=col-md-4> <span ng-repeat=\\\"item in array\\\">{{ item }}<span ng-if=!$last> | </span></span> </div> </div> </div>\";\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tweatherService.$inject = ['$http'];\n\t\n\tfunction weatherService($http) {\n\t  return {\n\t    get: function() {\n\t      return 'Hello from the weatherService!'\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = weatherService;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7a2997928a99f675367a\n **/","require('./modules/weather-forcast');\n\nangular\n  .module('app', [\n    'weatherForcast'\n  ])\n  .controller('ctrl', ctrl);\n\nfunction ctrl() {};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var template = require('./template.html');\nvar weatherService = require('./weatherService');\n\nangular\n  .module('weatherForcast', [])\n  .factory('weatherService', weatherService)\n  .directive('weatherForcast', weatherForcast);\n\nweatherForcast.$inject = ['weatherService'];\n\nfunction weatherForcast(weatherService) {\n  return {\n    restrict: 'E',\n    replace: false,\n    scope: {},\n    template: template,\n    link: function(scope, elem, attr, ctrl) {\n      var vm = scope;\n\n      console.log(weatherService.get())\n\n      vm.array = [1, 2, 3, 0, 4, 5];\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/modules/weather-forcast/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = \"<div class=weather-forcast> <div class=row> <div class=col-md-4> <h1>Local Weather Forcast</h1> </div> </div> <div class=row> <div class=col-md-4> <span ng-repeat=\\\"item in array\\\">{{ item }}<span ng-if=!$last> | </span></span> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/modules/weather-forcast/template.html\n ** module id = 2\n ** module chunks = 0\n **/","weatherService.$inject = ['$http'];\n\nfunction weatherService($http) {\n  return {\n    get: function() {\n      return 'Hello from the weatherService!'\n    }\n  }\n}\n\nmodule.exports = weatherService;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/modules/weather-forcast/weatherService.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}